# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createItem(data: ItemCreateInput!): Item!
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  deleteItem(where: ItemWhereUniqueInput!): Item
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User
  signout: SuccessMessage
  requestPasswordReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(itemId: ID!): CartItem!
  removeFromCart(id: ID!): CartItem!
  createOrder(token: String!): Order!
  updateUser(
    name: String
    currentPassword: String
    newPassword: String
    confirmPassword: String
  ): User!
}

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item!]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  currentUser: User
  users: [User]!
  order(id: ID!): Order
  orders(orderBy: OrderOrderByInput, skip: Int, first: Int): [Order]!
  ordersConnection: OrderConnection!
}

# override User from ./generated/prisma.graphql'
# so we don't expose password, resetToken, etc to client
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]
}

# override ItemCreateInput from ./generated/prisma.graphql'
# so that User would not be required from client
input ItemCreateInput {
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
}

# override ItemUpdateInput to not update user from client
input ItemUpdateInput {
  title: String
  description: String
  image: String
  largeImage: String
  price: Int
}
